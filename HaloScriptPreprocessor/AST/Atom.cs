using OneOf;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HaloScriptPreprocessor.AST
{
    public class Atom : Node
    {
        public Atom(Parser.Atom source) : base(source)
        {
            _value = source;
        }

        private OneOf<Parser.Atom, string> _value;
        public OneOf<Parser.Atom, string> Value {
            get => _value;
            set
            {
                _value = value;
                _modified = true;
            }
        }

        /// <summary>
        /// Was the atom value created by the parser?
        /// </summary>
        public bool IsFromParser
        {
            get => Value.IsT0;
        }

        /// <summary>
        /// Was the atom value generated by a pass? 
        /// </summary>
        public bool IsGenerated
        {
            get => Value.IsT1;
        }

        private bool _modified;

        /// <summary>
        /// Was the value modified after creation?
        /// </summary>
        public bool IsModified
        {
            get => _modified;
        }

        public override uint NodeCount => 1;

        public override string ToString()
        {
            if (_value.IsT0)
                return _value.AsT0.Value;
            if (_value.IsT1)
                return _value.AsT1;
            Debug.Assert(false, "OneOf should be atom or string!");
            return "";
        }
    }
}
