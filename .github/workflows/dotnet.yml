name: .NET 8

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'

jobs:
  build-linux:

    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT : true
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release
    - name: Test
      run: dotnet test -v n
      
    - name: Publish windows (x86)
      run: dotnet publish -c Release -r win-x86 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false HaloScriptPreprocessor
    - name: Upload artifact windows (x86)
      uses: actions/upload-artifact@v4
      with:
        name: win-x86
        path: HaloScriptPreprocessor/bin/Release/net8.0/win-x86/publish/
    - name: Publish windows (x64)
      run: dotnet publish -c Release -r win-x64 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false HaloScriptPreprocessor
    - name: Upload artifact windows (x64)
      uses: actions/upload-artifact@v4
      with:
        name: win-x64
        path: HaloScriptPreprocessor/bin/Release/net8.0/win-x64/publish/
    - name: Publish Linux (x64)
      run: dotnet publish -c Release -r linux-x64 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false HaloScriptPreprocessor
    - name: Upload artifact Linux (x64)
      uses: actions/upload-artifact@v4
      with:
        name: linux-x64
        path: HaloScriptPreprocessor/bin/Release/net8.0/linux-x64/publish/
    - name: Publish Linux (arm64)
      run: dotnet publish -c Release -r linux-arm64 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false HaloScriptPreprocessor
    - name: Upload artifact Linux (arm64)
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64
        path: HaloScriptPreprocessor/bin/Release/net8.0/linux-arm64/publish/
    - name: Publish macOS (x64)
      run: dotnet publish -c Release -r osx-x64 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false HaloScriptPreprocessor
    - name: Upload artifact macOS (x64)
      uses: actions/upload-artifact@v4
      with:
        name: osx-x64
        path: HaloScriptPreprocessor/bin/Release/net8.0/osx-x64/publish/
    - name: Publish macOS 11.01 Big Sur (arm64)
      run: dotnet publish -c Release -r osx.11.0-arm64 -P:PublishSingleFile=true -p:PublishTrimmed=false --self-contained false HaloScriptPreprocessor
    - name: Upload artifact macOS 11.01 Big Sur (arm64)
      uses: actions/upload-artifact@v4
      with:
        name: osx.11.0-arm64
        path: HaloScriptPreprocessor/bin/Release/net8.0/osx.11.0-arm64/publish/
      
  release:
    if: |
      github.event.action != 'pull_request' &&
      github.ref == 'refs/heads/main' &&
      github.repository == 'num0005/HaloScriptExtended'
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
    - name: Compress artifacts
      run: |
        zip -r win-x86.zip win-x86
        zip -r win-x64.zip win-x64
        zip -r linux-x64.zip linux-x64
        zip -r linux-arm64.zip linux-arm64
        zip -r osx-x64.zip osx-x64
#        zip -r generic.zip generic
#        zip -r osx.11.0-arm64.zip osx.11.0-arm64
    - uses: ncipollo/release-action@v1
      with:
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "*.zip"
        tag: ${{ github.run_id }}
